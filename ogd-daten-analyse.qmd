---
title: "ogd-daten-analyse.qmd"
format: html
editor: visual
author: Jana Kobler
---

## R Pakete laden

```{r}
library(readr)
library(dplyr)
library(ggplot2)
library(tidyverse)
devtools::install_github("statistikZH/statR")
```

```{r}
daten <- read_csv(here::here("daten/KTZH_00002423_00004863 (1).csv"))

glimpse(daten)
head(daten)
str(daten)
summary(daten)
names(daten)
colnames(daten)


```

```{r}
daten <- daten |> mutate(Dublin = as.numeric(Dublin),
                Stockholm = as.numeric(Stockholm),
                London = as.numeric(London)
)
                
daten_t<- pivot_longer(
  data = daten,
  cols = c(Zuerich, Median_aller_Regionen, Muenchen, Dublin, Amsterdam, London, Stockholm, Median_der_5_Vergleichsregionen),
  cols_vary = "fastest",
  names_to = "Stadt",
  names_prefix = NULL,
  names_sep = NULL,
  names_pattern = NULL,
  names_ptypes = NULL,
  names_transform = NULL,
  names_repair = "check_unique",
  values_to = "Indexwert",
  values_drop_na = FALSE,
  values_ptypes = NULL,
  values_transform = NULL
)  
  daten_t<- daten_t |> mutate(zuerich_binary = ifelse(Stadt == "Zuerich", TRUE, FALSE))
 
```

```{r}

median_lines_all <- daten_t |> 
  filter(Stadt == "Median_aller_Regionen") |> 
  select(Indikator, Indexwert)
median_lines_5 <- daten_t|> 
  filter(Stadt == "Median_der_5_Vergleichsregionen") |> 
  select(Indikator, Indexwert)

custom_labeller <- function(labels) {
  labels <- as.character(labels)  # Ensure labels are character strings
  labels[labels == "Anteil Bevölkerung beteiligt an lebenslangem Lernen"] <- "Anteil Bevölkerung beteiligt\n an lebenslangem Lernen"
  labels[labels == "Anteil neue MINT Doktoratsabsolventen im Verhältnis zur Population aller 25- bis 34-Jährigen"] <- "Anteil neue MINT Doktoratsabsolventen im\n Verhältnis zur Population aller 25- bis 34-Jährigen"
  labels[labels == "Wissenschaftliche Co-Publikationen im Verhältnis zur Gesamtbevölkerung"] <- "Wissenschaftliche Co-Publikationen \nim Verhältnis zur Gesamtbevölkerung"
  labels[labels == "BAK Taxation Index für hochqualifizierte Arbeitnehmende"] <- "BAK Taxation Index für\n hochqualifizierte Arbeitnehmende"  
  labels[labels == "KMU mit Kooperationsaktivitäten im Bereich Innovation"] <-  "KMU mit Kooperations-\naktivitäten im Bereich Innovation" 
  labels[labels =="Anteil Top Int. Wissenschaftliche Publikationen an allen Publikationen"]<-"Anteil Top Int. Wissenschaftliche \nPublikationen an allen Publikationen" 
  labels[labels =="Wettbewerbsfähigkeit der Unternehmensbesteuerung"] <- "Wettbewerbsfähigkeit der\n Unternehmensbesteuerung"
  labels[labels =="Anteil der Bevölkerung zwischen 15 und 64 Jahren"] <- "Anteil der Bevölkerung zwischen\n 15 und 64 Jahren"
  return(labels)  # Return modified labels
}


daten_t |> 
  filter(Stadt != "Median_aller_Regionen", Stadt != "Median_der_5_Vergleichsregionen") |> 
  ggplot(aes(x = Indexwert, y = Stadt, fill = zuerich_binary)) +  
  geom_boxplot(
    aes(x = Indexwert, group = Indikator), 
    width = 0.3, 
    outlier.shape = NA, 
    alpha = 0.2, 
    fill = "lightblue"
  )+
  facet_wrap(. ~ Indikator, labeller = as_labeller(custom_labeller)) +
  geom_vline(
    data = median_lines_all, 
    aes(xintercept = Indexwert, color = "All Regions Median"), 
    linetype = "dashed"
  ) +
  geom_vline(
    data = median_lines_5, 
    aes(xintercept = Indexwert, color = "Top 5 Regions Median"), 
    linetype = "dashed"
  ) +
  geom_segment(
    data = daten_t, 
    aes(x = Maximalwert, xend = Maximalwert, 
        y = 2, 
        yend = 5),
    alpha = 0.25
  )+
  geom_segment(
    data = daten_t, 
    aes(x = Minimalwert, xend = Minimalwert, 
        y = 2, 
        yend = 5),
    alpha = 0.25
  )+
  geom_point(shape = 21)+
  scale_fill_manual(
    name = "Zurich Data",  # Legend for fill
    values = c("TRUE" = "green", "FALSE" = "gray")
  ) +
  scale_color_manual(
    name = NULL,  # Legend for the lines
    values = c("All Regions Median" = "red", "Top 5 Regions Median" = "blue")
  ) +
  theme_bw()+
  theme(legend.position = "top",)+
  labs(
    title = "Städtevergleich",    
    subtitle = "nach Indikatoren", 
    caption = "Der Messzeitpunkt innerhalb der Indikatoren ist gleich (selbes Jahr), der Messzeitpunkt zwischen den Indikatoren stammt\n hingegen nicht aus einem spezifischen Jahr, je nach Indikator liegt der Messzeitpunkt zwischen den Jahren 2016 und 2023.", 
  )


```
